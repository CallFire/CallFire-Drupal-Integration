<?php
/**
 * Initializes the PSR-0 autoloader for the CallFire SDK and its dependencies
 *
 * @return void
 */
function callfire_sdk_init() {
    if(!class_exists('SplClassLoader')) {
        require_once(__DIR__.'/vendor/SplClassLoader.php');
    }

    $callfireLoader = new SplClassLoader('CallFire', __DIR__.'/vendor/CallFire-PHP-SDK/src');
    $callfireLoader->register();

    $stdlibLoader = new SplClassLoader('Zend\Stdlib', __DIR__.'/vendor');
    $stdlibLoader->register();
}

/**
 * Adds the API client configuration menu(s)
 *
 * @return array
 */
function callfire_sdk_menu() {
    $items = array();
    
    $items['admin/config/services/callfire_sdk'] = array(
        'title' => 'CallFire',
        'description' => 'CallFire API configuration',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('callfire_sdk_form_config'),
        'access arguments' => array('administer site configuration'),
        'type' => MENU_NORMAL_ITEM
    );
    
    return $items;
}

/**
 * API client configuration form
 *
 * @param array $form
 * @param array &$form_state
 * @return string
 */
function callfire_sdk_form_config($form, &$form_state) {
    $form['callfire_sdk_api_login'] = array(
        '#type' => 'textfield',
        '#title' => t('API login'),
        '#default_value' => variable_get('callfire_sdk_api_login', ''),
        '#size' => 12,
        '#maxlength' => 15,
        '#description' => '<a href="https://www.callfire.com/ui/manage/access" target="_blank">'.t('Your CallFire API login').'</a>',
        '#required' => true
    );
    
    $form['callfire_sdk_api_password'] = array(
        '#type' => 'textfield',
        '#title' => t('API password'),
        '#default_value' => variable_get('callfire_sdk_api_password', ''),
        '#size' => 16,
        '#maxlength' => 18,
        '#description' => '<a href="https://www.callfire.com/ui/manage/access" target="_blank">'.t('Your CallFire API password').'</a>',
        '#required' => true
    );
    
    return system_settings_form($form);
}

/**
 * REST client creation helper
 * 
 * Instantiates a REST client of the specified type, using the configured API
 * credentials, or the specified credentials.
 *
 * @param string|array $type
 * @param string $login = null
 * @param string $password = null
 * @return CallFire\Api\Rest\AbstractClient
 */
function callfire_sdk_rest_client($type, $login = null, $password = null) {
    if(!$login) {
        $login = variable_get('callfire_sdk_api_login');
    }
    
    if(!$password) {
        $password = variable_get('callfire_sdk_api_password');
    }

    return CallFire\Api\Client::Rest($login, $password, $type);
}

/**
 * SOAP client creation helper
 * 
 * Instantiates a SOAP client of the specified type, using the configured API
 * credentials, or the specified credentials
 *
 * @param string|array $type
 * @param string $login = null
 * @param string $password = null
 * @return CallFire\Api\Soap\AbstractClient
 */
function callfire_sdk_soap_client($type, $login = null, $password = null) {
    if(!$login) {
        $login = variable_get('callfire_sdk_api_login');
    }
    
    if(!$password) {
        $password = variable_get('callfire_sdk_api_password');
    }

    return CallFire\Api\Client::Soap($login, $password, $type);
}
