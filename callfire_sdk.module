<?php
/**
 * Initializes the PSR-0 autoloader for the CallFire SDK and its dependencies.
 *
 * @return void
 */
function callfire_sdk_init() {
  if (!class_exists('SplClassLoader')) {
    require_once __DIR__ . '/vendor/SplClassLoader.php';
  }

  $callfire_loader = new SplClassLoader('CallFire', __DIR__ . '/vendor/CallFire-PHP-SDK/src');
  $callfire_loader->register();

  $stdlib_loader = new SplClassLoader('Zend\Stdlib', __DIR__ . '/vendor');
  $stdlib_loader->register();
}

/**
 * Adds the API client configuration menu(s).
 *
 * @return array
 *   Menu content
 */
function callfire_sdk_menu() {
  $items = array();

  $items['admin/config/services/callfire_sdk'] = array(
    'title' => 'CallFire',
    'description' => 'CallFire API configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('callfire_sdk_form_config'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * API client configuration form.
 *
 * @param array $form
 *   The initial form structure
 * @param array &$form_state
 *   The form state
 * 
 * @return string
 *   Form markup
 */
function callfire_sdk_form_config($form, &$form_state) {
  $form['callfire_sdk_api_login'] = array(
    '#type' => 'textfield',
    '#title' => t('API login'),
    '#default_value' => variable_get('callfire_sdk_api_login', ''),
    '#size' => 12,
    '#maxlength' => 15,
    '#description' => '<a href="https://www.callfire.com/ui/manage/access" target="_blank">' . t('Your CallFire API login') . '</a>',
    '#required' => TRUE,
  );

  $form['callfire_sdk_api_password'] = array(
    '#type' => 'textfield',
    '#title' => t('API password'),
    '#default_value' => variable_get('callfire_sdk_api_password', ''),
    '#size' => 16,
    '#maxlength' => 18,
    '#description' => '<a href="https://www.callfire.com/ui/manage/access" target="_blank">' . t('Your CallFire API password') . '</a>',
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Defines the blocks for this module.
 *
 * @return array
 *   The blocks this module exposes
 */
function callfire_sdk_block_info() {
  $blocks = array();
  
  if(callfire_sdk_has_viable_credentials()) {
    $blocks['callfire_sdk_click_to_subscribe'] = array(
      'info' => t('CallFire Click to Subscribe'),
      'cache' => DRUPAL_CACHE_PER_ROLE,
    );
  }
  
  return $blocks;
}

function callfire_sdk_block_configure($delta = '') {
  switch($delta) {
    case 'callfire_sdk_click_to_subscribe':
      if (!module_load_include('inc', 'callfire_sdk', 'block/click_to_subscribe')) {
        return FALSE;
      }
      return callfire_sdk_block_click_to_subscribe_configure(); 
  }
}

function callfire_sdk_block_save($delta = '', $edit = array()) {
  switch($delta) {
    case 'callfire_sdk_click_to_subscribe':
      if (!module_load_include('inc', 'callfire_sdk', 'block/click_to_subscribe')) {
        return FALSE;
      }
      return callfire_sdk_block_click_to_subscribe_save($edit); 
  }
}

function callfire_sdk_block_view($delta = '') {
  switch($delta) {
    case 'callfire_sdk_click_to_subscribe':
      if (!user_access('access content') || !module_load_include('inc', 'callfire_sdk', 'block/click_to_subscribe')) {
        return FALSE;
      }
      return callfire_sdk_block_click_to_subscribe_view();
  }
}

/**
 * REST client creation helper.
 * 
 * Instantiates a REST client of the specified type, using the configured API
 * credentials, or the specified credentials.
 *
 * @param string|array $type
 *   API client type (e.g. 'Broadcast')
 * @param string $login = NULL
 *   Optional API login
 * @param string $password = NULL
 *   Option API password
 * 
 * @return CallFire\Api\Rest\AbstractClient
 *   The API client(s)
 */
function callfire_sdk_rest_client($type, $login = NULL, $password = NULL) {
  if (!$login) {
    $login = variable_get('callfire_sdk_api_login');
  }

  if (!$password) {
    $password = variable_get('callfire_sdk_api_password');
  }

  return CallFire\Api\Client::Rest($login, $password, $type);
}

/**
 * SOAP client creation helper.
 * 
 * Instantiates a SOAP client of the specified type, using the configured API
 * credentials, or the specified credentials.
 *
 * @param string|array $type
 *   API client type (e.g. 'Broadcast')
 * @param string $login = NULL
 *   Optional API login
 * @param string $password = NULL
 *   Option API password
 * 
 * @return CallFire\Api\Soap\AbstractClient
 *   The API client(s)
 */
function callfire_sdk_soap_client($type, $login = NULL, $password = NULL) {
  if (!$login) {
    $login = variable_get('callfire_sdk_api_login');
  }

  if (!$password) {
    $password = variable_get('callfire_sdk_api_password');
  }

  return CallFire\Api\Client::Soap($login, $password, $type);
}

/**
 * Determines whether the configured credentials are viable.
 *
 * @return boolean
 *   Whether the configured credentials are viable
 */
function callfire_sdk_has_viable_credentials() {
  $login = variable_get('callfire_sdk_api_login');
  $password = variable_get('callfire_sdk_api_password');
  
  return ((strlen($login) > 0) && (strlen($password) > 0));
}
